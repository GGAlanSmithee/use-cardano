{"version":3,"file":"index.js","sources":["../src/hooks/use-network-id.ts","../src/hooks/use-wallet-api.ts","../src/hooks/use-lucid.ts","../src/hooks/use-has-nami-extension.ts","../src/hooks/use-transaction.ts"],"sourcesContent":["import { WalletApi } from 'lucid-cardano';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useNetworkId = (walletApi?: WalletApi) => {\r\n  const [networkId, setNetworkId] = useState<number>()\r\n\r\n  const onNetworkChange = (newNetworkId: unknown) => {\r\n    setNetworkId(newNetworkId as number)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!walletApi?.experimental) return\r\n\r\n    walletApi.getNetworkId().then(setNetworkId)\r\n\r\n    walletApi.experimental.on(\"networkChange\", onNetworkChange)\r\n\r\n    return () => {\r\n      walletApi.experimental.off(\"networkChange\", onNetworkChange)\r\n    }\r\n  }, [walletApi])\r\n\r\n  return networkId\r\n}\r\n\r\nexport { useNetworkId }\r\n","import { WalletApi } from 'lucid-cardano';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useWalletApi = () => {\r\n  const [walletApi, setWalletApi] = useState<WalletApi>()\r\n\r\n  useEffect(() => {\r\n    if (!window.cardano?.nami) return\r\n\r\n    window.cardano.nami.enable().then(setWalletApi)\r\n  }, [])\r\n\r\n  return walletApi\r\n}\r\n\r\nexport { useWalletApi }\r\n","import { Blockfrost, Lucid } from \"lucid-cardano\"\r\nimport { useEffect } from \"react\"\r\n\r\nimport { useNetworkId } from \"./use-network-id\"\r\nimport { useWalletApi } from \"./use-wallet-api\"\r\n\r\nconst lucid = await Lucid.new()\r\n\r\nconst useLucid = () => {\r\n  const walletApi = useWalletApi()\r\n  const networkId = useNetworkId(walletApi)\r\n\r\n  useEffect(() => {\r\n    if (walletApi === undefined) return\r\n\r\n    lucid.selectWallet(walletApi)\r\n  }, [walletApi])\r\n\r\n  useEffect(() => {\r\n    if (networkId === undefined) return\r\n\r\n    lucid.switchProvider(\r\n      new Blockfrost(`/api/blockfrost/${networkId}`),\r\n      networkId === 0 ? \"Testnet\" : \"Mainnet\"\r\n    )\r\n  }, [networkId])\r\n\r\n  return {\r\n    networkId,\r\n    walletApi,\r\n    lucid,\r\n  }\r\n}\r\n\r\nexport { useLucid }\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useHasNamiExtension = () => {\r\n  const [hasNamiExtension, setHasNamiExtension] = useState<boolean>()\r\n\r\n  useEffect(() => {\r\n    // give the browser a chance to load the extension\r\n    // and for it to inject itself into the window object\r\n    const timeout = setTimeout(() => {\r\n      setHasNamiExtension(!!window.cardano?.nami)\r\n    }, 10)\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [])\r\n\r\n  return hasNamiExtension\r\n}\r\n\r\nexport { useHasNamiExtension }\r\n","import { Lucid } from \"lucid-cardano\"\r\nimport { useCallback, useEffect, useState } from \"react\"\r\n\r\nconst useTransaction = (lucid?: Lucid) => {\r\n  const [successMessage, setSuccessMessage] = useState<string>()\r\n  const [error, setError] = useState<Error | undefined>()\r\n  const [lovelace, setLovelace] = useState(0)\r\n  const [toAccount, setToAccount] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if (!successMessage) return\r\n\r\n    const timeout = setTimeout(() => setSuccessMessage(undefined), 5000)\r\n\r\n    return () => clearTimeout(timeout)\r\n  }, [successMessage])\r\n\r\n  const sendTransaction = useCallback(async () => {\r\n    if (!lucid || !toAccount || !lovelace) return\r\n\r\n    try {\r\n      const tx = await lucid\r\n        .newTx()\r\n        .payToAddress(toAccount, { lovelace: BigInt(lovelace) })\r\n        .complete()\r\n\r\n      const signedTx = await tx.sign().complete()\r\n\r\n      const txHash = await signedTx.submit()\r\n\r\n      setLovelace(0)\r\n      setToAccount(\"\")\r\n      setSuccessMessage(`Transaction submitted with hash ${txHash}`)\r\n    } catch (e) {\r\n      if (e instanceof Error) setError(e)\r\n      else console.error(e)\r\n    }\r\n  }, [lucid, toAccount, lovelace])\r\n\r\n  const lovelaceSetter = useCallback((value: string) => {\r\n    setError(undefined)\r\n    setSuccessMessage(undefined)\r\n\r\n    const parsed = parseInt(value)\r\n    if (isNaN(parsed)) return\r\n    setLovelace(parsed)\r\n  }, [])\r\n\r\n  const toAccountSetter = useCallback((value: string) => {\r\n    setError(undefined)\r\n    setSuccessMessage(undefined)\r\n    setToAccount(value)\r\n  }, [])\r\n\r\n  return {\r\n    error,\r\n    successMessage,\r\n    lovelace,\r\n    setLovelace: lovelaceSetter,\r\n    toAccount,\r\n    setToAccount: toAccountSetter,\r\n    sendTransaction,\r\n  }\r\n}\r\n\r\nexport { useTransaction }\r\n"],"names":[],"mappings":";;;AAGA,MAAM,YAAY,GAAG,CAAC,SAAqB,KAAI;IAC7C,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,EAAU,CAAA;AAEpD,IAAA,MAAM,eAAe,GAAG,CAAC,YAAqB,KAAI;QAChD,YAAY,CAAC,YAAsB,CAAC,CAAA;AACtC,KAAC,CAAA;IAED,SAAS,CAAC,MAAK;QACb,IAAI,EAAC,SAAS,KAAA,IAAA,IAAT,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE,YAAY,CAAA;YAAE,OAAM;QAEpC,SAAS,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;QAE3C,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC,CAAA;AAE3D,QAAA,OAAO,MAAK;YACV,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,EAAE,eAAe,CAAC,CAAA;AAC9D,SAAC,CAAA;AACH,KAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAA;AAEf,IAAA,OAAO,SAAS,CAAA;AAClB,CAAC;;ACpBD,MAAM,YAAY,GAAG,MAAK;IACxB,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,EAAa,CAAA;IAEvD,SAAS,CAAC,MAAK;;QACb,IAAI,EAAC,CAAA,EAAA,GAAA,MAAM,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAA;YAAE,OAAM;AAEjC,QAAA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;KAChD,EAAE,EAAE,CAAC,CAAA;AAEN,IAAA,OAAO,SAAS,CAAA;AAClB,CAAC;;ACPD,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE,CAAA;AAEzB,MAAA,QAAQ,GAAG,MAAK;AACpB,IAAA,MAAM,SAAS,GAAG,YAAY,EAAE,CAAA;AAChC,IAAA,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,CAAA;IAEzC,SAAS,CAAC,MAAK;QACb,IAAI,SAAS,KAAK,SAAS;YAAE,OAAM;AAEnC,QAAA,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAA;AAC/B,KAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAA;IAEf,SAAS,CAAC,MAAK;QACb,IAAI,SAAS,KAAK,SAAS;YAAE,OAAM;QAEnC,KAAK,CAAC,cAAc,CAClB,IAAI,UAAU,CAAC,CAAA,gBAAA,EAAmB,SAAS,CAAA,CAAE,CAAC,EAC9C,SAAS,KAAK,CAAC,GAAG,SAAS,GAAG,SAAS,CACxC,CAAA;AACH,KAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAA;IAEf,OAAO;QACL,SAAS;QACT,SAAS;QACT,KAAK;KACN,CAAA;AACH;;AC9BM,MAAA,mBAAmB,GAAG,MAAK;IAC/B,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,QAAQ,EAAW,CAAA;IAEnE,SAAS,CAAC,MAAK;;;AAGb,QAAA,MAAM,OAAO,GAAG,UAAU,CAAC,MAAK;;AAC9B,YAAA,mBAAmB,CAAC,CAAC,EAAC,CAAA,EAAA,GAAA,MAAM,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAA,CAAC,CAAA;SAC5C,EAAE,EAAE,CAAC,CAAA;AAEN,QAAA,OAAO,MAAK;YACV,YAAY,CAAC,OAAO,CAAC,CAAA;AACvB,SAAC,CAAA;KACF,EAAE,EAAE,CAAC,CAAA;AAEN,IAAA,OAAO,gBAAgB,CAAA;AACzB;;ACfA,MAAM,cAAc,GAAG,CAAC,KAAa,KAAI;IACvC,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,QAAQ,EAAU,CAAA;IAC9D,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,EAAqB,CAAA;IACvD,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;IAC3C,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAA;IAE9C,SAAS,CAAC,MAAK;AACb,QAAA,IAAI,CAAC,cAAc;YAAE,OAAM;AAE3B,QAAA,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM,iBAAiB,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAA;AAEpE,QAAA,OAAO,MAAM,YAAY,CAAC,OAAO,CAAC,CAAA;AACpC,KAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAA;AAEpB,IAAA,MAAM,eAAe,GAAG,WAAW,CAAC,YAAW;AAC7C,QAAA,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,IAAI,CAAC,QAAQ;YAAE,OAAM;QAE7C,IAAI;YACF,MAAM,EAAE,GAAG,MAAM,KAAK;AACnB,iBAAA,KAAK,EAAE;iBACP,YAAY,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;AACvD,iBAAA,QAAQ,EAAE,CAAA;YAEb,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAA;AAE3C,YAAA,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAA;YAEtC,WAAW,CAAC,CAAC,CAAC,CAAA;YACd,YAAY,CAAC,EAAE,CAAC,CAAA;AAChB,YAAA,iBAAiB,CAAC,CAAA,gCAAA,EAAmC,MAAM,CAAA,CAAE,CAAC,CAAA;AAC/D,SAAA;AAAC,QAAA,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,YAAY,KAAK;gBAAE,QAAQ,CAAC,CAAC,CAAC,CAAA;;AAC9B,gBAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;AACtB,SAAA;KACF,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAA;AAEhC,IAAA,MAAM,cAAc,GAAG,WAAW,CAAC,CAAC,KAAa,KAAI;QACnD,QAAQ,CAAC,SAAS,CAAC,CAAA;QACnB,iBAAiB,CAAC,SAAS,CAAC,CAAA;AAE5B,QAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAA;QAC9B,IAAI,KAAK,CAAC,MAAM,CAAC;YAAE,OAAM;QACzB,WAAW,CAAC,MAAM,CAAC,CAAA;KACpB,EAAE,EAAE,CAAC,CAAA;AAEN,IAAA,MAAM,eAAe,GAAG,WAAW,CAAC,CAAC,KAAa,KAAI;QACpD,QAAQ,CAAC,SAAS,CAAC,CAAA;QACnB,iBAAiB,CAAC,SAAS,CAAC,CAAA;QAC5B,YAAY,CAAC,KAAK,CAAC,CAAA;KACpB,EAAE,EAAE,CAAC,CAAA;IAEN,OAAO;QACL,KAAK;QACL,cAAc;QACd,QAAQ;AACR,QAAA,WAAW,EAAE,cAAc;QAC3B,SAAS;AACT,QAAA,YAAY,EAAE,eAAe;QAC7B,eAAe;KAChB,CAAA;AACH;;;;"}